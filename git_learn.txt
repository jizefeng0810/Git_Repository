1、初始化一个Git仓库，使用git init命令。
2、添加文件到Git仓库，分两步：
	使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	使用命令git commit -m <message>，完成。
3、HEAD指向的版本就是当前版本(HEAD^指上一个版本)，因此，Git允许我们在版本的历史之间穿梭，使用命令
	git reset --hard commit_id。
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
	git log --pretty=oneline
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
4、工作区和暂存区
仓库的文件夹就是一个工作区
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
	git status：查看仓库状态
暂存区为git add提交的文件暂存的内存空间，再通过git commit提交到仓库。
5、管理修改
第一次修改 -> git add -> 第二次修改 -> git commit
提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：
6、撤销修改
命令git restore -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
如git add到暂存区，使用命令git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区，再通过git restore -- readme.txt撤销

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
7、删除文件
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
要从版本库中删除该文件，那就用命令git rm删掉，并且git commit
